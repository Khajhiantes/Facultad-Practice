class Program
{
    static void Main(string[] args)
    {
        int width = 10;
        int height = 10;
        bool[,] board = new bool[width, height];

        // Inicializar el tablero con algunos valores.
        // Aqu√≠ puedes poner tu propio estado inicial.
        board[3, 3] = true;
        board[3, 4] = true;
        board[3, 5] = true;

        while (true)
        {
            PrintBoard(board);
            board = NextGeneration(board);
            System.Threading.Thread.Sleep(1000);
        }
    }

    static void PrintBoard(bool[,] board)
    {
        int width = board.GetLength(0);
        int height = board.GetLength(1);

        for (int y = 0; y < height; y++)
        {
            for (int x = 0; x < width; x++)
            {
                Console.Write(board[x, y] ? "X" : ".");
            }
            Console.WriteLine();
        }
        Console.WriteLine();
    }

    static bool[,] NextGeneration(bool[,] current)
    {
        int width = current.GetLength(0);
        int height = current.GetLength(1);
        bool[,] next = new bool[width, height];

        for (int y = 0; y < height; y++)
        {
            for (int x = 0; x < width; x++)
            {
                int aliveNeighbors = CountAliveNeighbors(current, x, y);
                if (current[x, y])
                {
                    next[x, y] = aliveNeighbors == 2 || aliveNeighbors == 3;
                }
                else
                {
                    next[x, y] = aliveNeighbors == 3;
                }
            }
        }

        return next;
    }

    static int CountAliveNeighbors(bool[,] board, int x, int y)
    {
        int count = 0;
        int width = board.GetLength(0);
        int height = board.GetLength(1);

        for (int j = Math.Max(0, y - 1); j <= Math.Min(height - 1, y + 1); j++)
        {
            for (int i = Math.Max(0, x - 1); i <= Math.Min(width - 1, x + 1); i++)
            {
                if (i == x && j == y)
                {
                    continue;
                }

                if (board[i, j])
                {
                    count++;
                }
            }
        }

        return count;
    }
}